{
  "name": "gemini_proxy",
  "project_name": "Gemini代理服务",
  "version": "1.0.0",
  "description": "基于Google Gemini API的代理服务，支持文本生成和语音合成",
  "author": "AI Assistant",
  "python_version": "3.10",
  "requirements": "requirements.txt",
  "main_file": "wsgi.py",
  "wsgi_module": "wsgi:application",
  "server": {
    "type": "gunicorn",
    "host": "0.0.0.0",
    "port": 8000,
    "workers": "auto",
    "worker_class": "uvicorn.workers.UvicornWorker",
    "timeout": 120,
    "config_file": "bt_gunicorn.conf.py"
  },
  "environment": {
    "GEMINI_API_KEY": "your_gemini_api_key_here",
    "HOST": "0.0.0.0",
    "PORT": "8000",
    "AUDIO_OUTPUT_DIR": "audio_output"
  },
  "directories": {
    "logs": "logs",
    "audio": "audio_output",
    "static": "static"
  },
  "permissions": {
    "user": "www",
    "group": "www",
    "mode": "755"
  },
  "startup": {
    "command": "./bt_service.sh start",
    "auto_start": true,
    "restart_on_failure": true
  },
  "health_check": {
    "url": "http://localhost:8000/api/v1/health",
    "interval": 30,
    "timeout": 10
  },
  "dependencies": [
    "fastapi>=0.115.0",
    "uvicorn>=0.32.0",
    "gunicorn>=21.2.0",
    "google-genai>=1.19.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "httpx>=0.28.1"
  ],
  "bt_config": {
    "panel_version": "7.0+",
    "python_manager": true,
    "venv_auto_create": true,
    "venv_path": "/www/server/pyproject_evn/gemini_proxy_venv",
    "nginx_proxy": true,
    "ssl_auto": true,
    "firewall_rules": [
      {
        "port": 8000,
        "protocol": "tcp",
        "description": "Gemini代理服务API端口"
      }
    ]
  },
  "documentation": {
    "readme": "README.md",
    "api_docs": "API_DOCS.md",
    "deployment": "bt_deploy.md",
    "swagger": "/docs",
    "redoc": "/redoc"
  },
  "scripts": {
    "start": "./bt_service.sh start",
    "stop": "./bt_service.sh stop",
    "restart": "./bt_service.sh restart",
    "status": "./bt_service.sh status",
    "logs": "./bt_service.sh logs",
    "diagnose": "./bt_service.sh diagnose",
    "install": "./bt_service.sh install",
    "check": "./bt_service.sh check"
  }
} 